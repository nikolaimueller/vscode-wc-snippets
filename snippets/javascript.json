{
	"Custom Element Class v1": {
		"prefix": "cec",
		"body": [
			"// Component: $TM_FILENAME_BASE",
			"// See:   https://developer.mozilla.org/en-US/docs/Web/Web_Components",
			"",
			"const template = document.createElement('template');",
			"template.innerHTML = `",
			"<h1>class: $TM_FILENAME_BASE</h1>",
			"<p>Custom Template TAG: &lt;<code>${2:}</code>&gt; content comes here.</p>",
			"`;",
			"",
			"export default class $TM_FILENAME_BASE extends HTMLElement {",
			"\tstatic get tag() { return '${2:}' };",
			"\tstatic get styleSheet_url() {",
			"\t\t// Replace module url's \".js\" extension with \".css\"",
			"\t\t// Accept an exception to occure here, i.e. if \"import.meta.url\" doesn't exist !!",
			"\t\treturn import.meta.url.substr(0, import.meta.url.length - '.js'.length) + '.css';",
			"\t}",
			"",
			"\tconstructor() {",
			"\t\tsuper()",
			"",
			"\t\tlet shadow = this.attachShadow({mode:'open'});",
			"",
			"\t\t// Add Component StyleSheet-Link",
			"\t\tthis.refLinkStyle = document.createElement('link');",
			"\t\tthis.refLinkStyle.setAttribute('rel', 'stylesheet');",
			"\t\tthis.refLinkStyle.setAttribute('href', $TM_FILENAME_BASE.styleSheet_url);",
			"\t\tshadow.appendChild(this.refLinkStyle);",
			"",
			"\t\t// Add template content",
			"\t\tshadow.appendChild(template.content.cloneNode(true));",
			"\t}",
			"",
			"\t// *** Livecycle callbacks  ***",
			"\t// see:  https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#Using_the_lifecycle_callbacks",
			"",
			"\t// Invoked each time the custom element is appended into a document-connected element.",
			"\tconnectedCallback() {",
			"\t\tconsole.log('!! connectedCallback(): NOT IMPLEMENTED !!')",
			"\t\tif (this.isConnected) {",
			"\t\t\t// implement your callback here.",
			"\t\t}",
			"\t}",
			"",
			"\t// Invoked each time the custom element is disconnected from the document's DOM.",
			"\tdisconnectedCallback() {",
			"\t\tconsole.log('!! disconnectedCallback(): NOT IMPLEMENTED !!')",
			"\t}",
			"",
			"\t// Invoked each time the custom element is moved to a new document.",
			"\tadoptedCallback() {",
			"\t\tconsole.log('!! adoptedCallback(): NOT IMPLEMENTED !!')",
			"\t}",
			"",
			"\t// Invoked each time one of the custom element's attributes is added, removed, or changed.",
			"\tattributeChangedCallback(name, oldValue, newValue) {",
			"\t\tconsole.log('!! attributeChangedCallback(): NOT IMPLEMENTED !!')",
			"\t}",
			"}",
			"// Register custom element.",
			"customElements.define($TM_FILENAME_BASE.tag, $TM_FILENAME_BASE);"
		],
		"description": "Class for custom element v1."
	}
}